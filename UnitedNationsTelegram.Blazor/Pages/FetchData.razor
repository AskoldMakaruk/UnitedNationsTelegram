@page "/fetchdata"
@using UnitedNationsTelegram.Services.Services
@using Newtonsoft.Json
@inject HttpClient Http
@inject IJSRuntime JS

<PageTitle>Members</PageTitle>

@if (members == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead class="table-dark">
        <tr>
            <th>Місце</th>
            <th>Country</th>
            <th>Name</th>
            <th>Votes</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var member in members.Countries.OrderBy(a => a.Place))
        {
            <tr>
                <td>@member.Place. @(member.PlaceDelta > 0 ? $"{member.PlaceDelta}↑" : member.PlaceDelta < 0 ? $"{member.PlaceDelta}↓" : "")</td>
                <td>@member.Flag@member.Country</td>
                <td>@member.UserName</td>
                <td>@member.Votes</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private MembersViewModel? members;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var line = await JS.InvokeAsync<string>("window.Telegram.WebApp.initData");

            var data = JsonConvert.DeserializeObject<WebAppInitData>(line);

            members = await Http.GetFromJsonAsync<MembersViewModel>("Main?chatId=" + data.User?.Id);
            var _ = await JS.InvokeAsync<string>("window.Telegram.WebApp.sendData", line);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    public class WebAppInitData
    {
    // query_id 	String 	Optional. A unique identifier for the Web App session, required for sending messages via the answerWebAppQuery method.
    // user 	WebAppUser 	Optional. An object containing data about the current user.
    // receiver 	WebAppUser 	Optional. An object containing data about the chat partner of the current user in the chat where the bot was launched via the attachment menu. Returned only for Web Apps launched via the attachment menu.
    // start_param 	String 	Optional. The value of the startattach parameter, passed via link. Only returned for Web Apps when launched from the attachment menu via link.
    //
    // The value of the start_param parameter will also be passed in the GET-parameter tgWebAppStartParam, so the Web App can load the correct interface right away.
    // auth_date 	Integer 	Unix time when the form was opened.
    // hash 	String 	A hash of all passed parameters, which the bot server can use to check their validity.


        public string? QueryId { get; set; }
        public WebAppUser? User { get; set; }
        public WebAppUser? Receiver { get; set; }
        public string? StartParam { get; set; }
        public int AuthDate { get; set; }
        public string? Hash { get; set; }
    }

    public class WebAppUser
    {
        public long Id { get; set; }
        public bool? IsBot { get; set; }
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? Username { get; set; }
        public string? LanguageCode { get; set; }
        public string? PhotoUrl { get; set; }
    }

}

}